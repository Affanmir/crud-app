{"ast":null,"code":"import _slicedToArray from \"/Users/affanmir/Desktop/CRUD/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/affanmir/Desktop/CRUD/Frontend/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Divider, Typography, Button, Col, Row, Modal } from \"antd\";\nimport Category from \"./Category\";\nimport Product from \"./Product\";\nimport Productform from \"./Productform\";\nimport Categoryform from \"./categoryform\";\nimport { Layout } from \"antd\";\nimport { Space, Table, Tag } from \"antd\";\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\n\nvar Title = Typography.Title;\nvar Content = Layout.Content;\n\nfunction App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      proddata = _useState2[0],\n      setProd = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      catdata = _useState4[0],\n      setCat = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isModalOpen = _useState6[0],\n      setIsModalOpen = _useState6[1];\n\n  var showModal = function showModal() {\n    setIsModalOpen(true);\n  };\n\n  var handleOk = function handleOk() {\n    setIsModalOpen(false);\n  };\n\n  var handleCancel = function handleCancel() {\n    setIsModalOpen(false);\n  };\n\n  var AddprodOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      title: \"React POST Request Example\",\n      description: \" Some description\",\n      price: 10000,\n      category: \"technology\"\n    })\n  };\n  var AddcatOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      title: \"React POST Request Example\"\n    })\n  };\n\n  var addcat = function addcat(AddcatOptions) {\n    fetch(\"/category\", AddcatOptions).then(function () {\n      return getCat();\n    });\n  };\n\n  var delCat = function delCat(id) {\n    fetch(\"/category/\".concat(id), {\n      method: \"DELETE\"\n    }).then(function () {\n      getCat();\n      getProd();\n    });\n  };\n\n  var Addprod = function Addprod(requestOptions) {\n    fetch(\"/products\", requestOptions).then(function () {\n      return getProd();\n    });\n  };\n\n  var delProduct = function delProduct(id) {\n    fetch(\"/products/\".concat(id), {\n      method: \"DELETE\"\n    }).then(function () {\n      return getProd();\n    });\n  };\n\n  var getCat = function getCat() {\n    fetch(\"/category\", {\n      header: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (myJson) {\n      setCat(myJson);\n    });\n  };\n\n  var getProd = function getProd() {\n    fetch(\"/products\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (myJson) {\n      setProd(myJson);\n    });\n  };\n\n  useEffect(function () {\n    getProd();\n    getCat();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, \" Hello\");\n} //   return (\n//     <div className=\"App\">\n//       <Layout style={{ width: 900, backgroundColor: \"black\" }}>\n//         <Content>\n//           <Row>\n//             <Col span={18}>\n//               <Title style={{ color: \"white\" }}>Product List</Title>\n//               {proddata.length > 0 ? (\n//                 <div className=\"conatainer\">\n//                   {proddata.map((item) => (\n//                     <>\n//                       <Product propx={item} />\n//                       <Button\n//                         onClick={() => {\n//                           delProduct(item.id);\n//                         }}\n//                         type=\"danger\"\n//                       >\n//                         Delete Product\n//                       </Button>\n//                       <Divider />\n//                     </>\n//                   ))}\n//                 </div>\n//               ) : (\n//                 <h1 style={{ color: \"white\" }}>No Products to render</h1>\n//               )}\n//               <Title style={{ color: \"white\" }}>Category List</Title>\n//               {catdata.length > 0 ? (\n//                 <div className=\"conatainer\">\n//                   {catdata.map((item) => (\n//                     <>\n//                       <Category props={item} />\n//                       <Button onClick={() => delCat(item.id)} type=\"danger\">\n//                         Delete Category\n//                       </Button>\n//                       <Divider />\n//                     </>\n//                   ))}\n//                 </div>\n//               ) : (\n//                 <h1 style={{ color: \"white\" }}>No Ctegories to render</h1>\n//               )}\n//             </Col>\n//             <Col span={6}>\n//               <div>\n//                 <Divider />\n//                 <Divider />\n//                 <Divider />\n//                 <Divider />\n//                 <Title level={4} style={{ color: \"white\" }}>\n//                   Add Products\n//                 </Title>\n//                 <Button\n//                   onClick={() => {\n//                     showModal();\n//                     getProd();\n//                   }}\n//                   type=\"primary\"\n//                 >\n//                   Add Product\n//                 </Button>\n//                 <Modal\n//                   title=\"Add Product\"\n//                   open={isModalOpen}\n//                   onOk={handleOk}\n//                   onCancel={handleCancel}\n//                 >\n//                   <Productform/>\n//                 </Modal>\n//               </div>\n//               <div>\n//                 <Title level={4} style={{ color: \"white\" }}>\n//                   Add Categories\n//                 </Title>\n//                 <Button onClick={() => addcat(AddcatOptions)} type=\"primary\">\n//                   Add Category\n//                 </Button>\n//               </div>\n//             </Col>\n//           </Row>\n//         </Content>\n//       </Layout>\n//     </div>\n//   );\n// }\n\n\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","Divider","Typography","Button","Col","Row","Modal","Category","Product","Productform","Categoryform","Layout","Space","Table","Tag","Title","Content","App","proddata","setProd","catdata","setCat","isModalOpen","setIsModalOpen","showModal","handleOk","handleCancel","AddprodOptions","method","headers","body","JSON","stringify","title","description","price","category","AddcatOptions","addcat","fetch","then","getCat","delCat","id","getProd","Addprod","requestOptions","delProduct","header","Accept","response","json","myJson"],"sources":["/Users/affanmir/Desktop/CRUD/Frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Divider, Typography, Button, Col, Row, Modal } from \"antd\";\nimport Category from \"./Category\";\nimport Product from \"./Product\";\nimport Productform from \"./Productform\";\nimport Categoryform from \"./categoryform\";\nimport { Layout } from \"antd\";\nimport { Space, Table, Tag } from \"antd\";\n\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\n\n\nconst { Title } = Typography;\nconst { Content } = Layout;\nfunction App() {\n  const [proddata, setProd] = useState([]);\n  const [catdata, setCat] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleOk = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n\n  const AddprodOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      title: \"React POST Request Example\",\n      description: \" Some description\",\n      price: 10000,\n      category: \"technology\",\n    }),\n  };\n\n  const AddcatOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ title: \"React POST Request Example\" }),\n  };\n\n  const addcat = (AddcatOptions) => {\n    fetch(\"/category\", AddcatOptions).then(() => getCat());\n  };\n  const delCat = (id) => {\n    fetch(`/category/${id}`, { method: \"DELETE\" }).then(() => {\n      getCat();\n      getProd();\n    });\n  };\n\n  const Addprod = (requestOptions) => {\n    fetch(\"/products\", requestOptions).then(() => getProd());\n  };\n\n  const delProduct = (id) => {\n    fetch(`/products/${id}`, { method: \"DELETE\" }).then(() => getProd());\n  };\n\n  const getCat = () => {\n    fetch(\"/category\", {\n      header: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    })\n      .then(function(response) {\n        return response.json();\n      })\n\n      .then(function(myJson) {\n        setCat(myJson);\n      });\n  };\n\n  const getProd = () => {\n    fetch(\"/products\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    })\n      .then(function(response) {\n        return response.json();\n      })\n\n      .then(function(myJson) {\n        setProd(myJson);\n      });\n  };\n\n\n  useEffect(() => {\n    getProd();\n    getCat();\n  }, []);\n\n\n  return (\n    <div className=\"App\"> Hello</div>\n\n  )}\n//   return (\n//     <div className=\"App\">\n//       <Layout style={{ width: 900, backgroundColor: \"black\" }}>\n//         <Content>\n//           <Row>\n//             <Col span={18}>\n//               <Title style={{ color: \"white\" }}>Product List</Title>\n//               {proddata.length > 0 ? (\n//                 <div className=\"conatainer\">\n//                   {proddata.map((item) => (\n//                     <>\n//                       <Product propx={item} />\n//                       <Button\n//                         onClick={() => {\n//                           delProduct(item.id);\n//                         }}\n//                         type=\"danger\"\n//                       >\n//                         Delete Product\n//                       </Button>\n//                       <Divider />\n//                     </>\n//                   ))}\n//                 </div>\n//               ) : (\n//                 <h1 style={{ color: \"white\" }}>No Products to render</h1>\n//               )}\n\n//               <Title style={{ color: \"white\" }}>Category List</Title>\n//               {catdata.length > 0 ? (\n//                 <div className=\"conatainer\">\n//                   {catdata.map((item) => (\n//                     <>\n//                       <Category props={item} />\n//                       <Button onClick={() => delCat(item.id)} type=\"danger\">\n//                         Delete Category\n//                       </Button>\n//                       <Divider />\n//                     </>\n//                   ))}\n//                 </div>\n//               ) : (\n//                 <h1 style={{ color: \"white\" }}>No Ctegories to render</h1>\n//               )}\n//             </Col>\n//             <Col span={6}>\n//               <div>\n//                 <Divider />\n//                 <Divider />\n//                 <Divider />\n//                 <Divider />\n//                 <Title level={4} style={{ color: \"white\" }}>\n//                   Add Products\n//                 </Title>\n//                 <Button\n//                   onClick={() => {\n//                     showModal();\n//                     getProd();\n//                   }}\n//                   type=\"primary\"\n//                 >\n//                   Add Product\n//                 </Button>\n\n//                 <Modal\n//                   title=\"Add Product\"\n//                   open={isModalOpen}\n//                   onOk={handleOk}\n//                   onCancel={handleCancel}\n//                 >\n//                   <Productform/>\n//                 </Modal>\n//               </div>\n//               <div>\n//                 <Title level={4} style={{ color: \"white\" }}>\n//                   Add Categories\n//                 </Title>\n//                 <Button onClick={() => addcat(AddcatOptions)} type=\"primary\">\n//                   Add Category\n//                 </Button>\n            \n//               </div>\n//             </Col>\n//           </Row>\n//         </Content>\n//       </Layout>\n//     </div>\n//   );\n// }\n\nexport default App;\n"],"mappings":"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AQ,CAACC,IAAT,EAAP;IACD,CARH,EAUGX,IAVH,CAUQ,UAASY,MAAT,EAAiB;MACrBjC,OAAO,CAACiC,MAAD,CAAP;IACD,CAZH;EAaD,CAdD;;EAiBApD,SAAS,CAAC,YAAM;IACd4C,OAAO;IACPH,MAAM;EACP,CAHQ,EAGN,EAHM,CAAT;EAMA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YADF;AAGE,C,CACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAexB,GAAf"},"metadata":{},"sourceType":"module"}